services:
  python_server:
    container_name: python_server
    build: ./python
    restart: always
    ports:
      - 8000:1337
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - bk



  db_postgres:
    container_name: db_postgres
    restart: always

    environment:
      - POSTGRES_PASSWORD=root
    image: postgres
    volumes:
      # DB initialization scripts
      - ./postgres/01-functions-and-stuff.sql:/docker-entrypoint-initdb.d/01-functions-and-stuff.sql
      - ./postgres/02-user.sql:/docker-entrypoint-initdb.d/02-user.sql
      - ./postgres/03-research.sql:/docker-entrypoint-initdb.d/03-research.sql
      - ./postgres/04-kit.sql:/docker-entrypoint-initdb.d/04-kit.sql
      - ./postgres/05-qr.sql:/docker-entrypoint-initdb.d/05-qr.sql
      - ./postgres/06-sample.sql:/docker-entrypoint-initdb.d/06-sample.sql
      
      # Expose DB data folder to host machine
      - ./postgres/data/:/var/lib/postgresql/data/

      # Sync time with host machine
      - /etc/localtime:/etc/localtime:ro
    command: ["postgres", "-c", "log_statement=all"]
    networks:
      bk:
        ipv4_address: 172.25.0.10


  auth_db:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname

    networks:
      - bk
    volumes:
      - ./auth/postgres_data/:/var/lib/postgresql/data
    restart:
      always

  auth_backend:
    build: 
      context: auth/backend
    env_file: 
      - auth/.env
      - auth/.jwt_env

    networks:
      - bk

    ports:
      - 1338:8000
    restart:
      always

networks:
  bk:
    ipam:
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1
